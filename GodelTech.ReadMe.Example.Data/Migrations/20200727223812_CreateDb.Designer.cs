// <auto-generated />
using System;
using GodelTech.ReadMe.Example.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GodelTech.ReadMe.Example.Data.Migrations
{
    [DbContext(typeof(WeatherForecastDbContext))]
    [Migration("20200727223812_CreateDb")]
    partial class CreateDb
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GodelTech.ReadMe.Example.Data.Entities.Precipitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("PrecipitationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Temperature")
                        .HasColumnType("int");

                    b.Property<string>("Town")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PrecipitationTypeId");

                    b.ToTable("Precipitations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateTime = new DateTime(2020, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrecipitationTypeId = 1,
                            Summary = "Hot",
                            Temperature = 32,
                            Town = "Grodno"
                        },
                        new
                        {
                            Id = 2,
                            DateTime = new DateTime(2019, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrecipitationTypeId = 1,
                            Summary = "Ok",
                            Temperature = 28,
                            Town = "London"
                        },
                        new
                        {
                            Id = 3,
                            DateTime = new DateTime(2020, 8, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrecipitationTypeId = 2,
                            Summary = "Where is summer?",
                            Temperature = 20,
                            Town = "Venezia"
                        },
                        new
                        {
                            Id = 4,
                            DateTime = new DateTime(2019, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrecipitationTypeId = 2,
                            Summary = "Cold",
                            Temperature = 15,
                            Town = "Barselona"
                        },
                        new
                        {
                            Id = 5,
                            DateTime = new DateTime(2018, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PrecipitationTypeId = 3,
                            Summary = "Not bad",
                            Temperature = 26,
                            Town = "Minsk"
                        });
                });

            modelBuilder.Entity("GodelTech.ReadMe.Example.Data.Entities.PrecipitationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PrecipitationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rain"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Snow"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hail"
                        });
                });

            modelBuilder.Entity("GodelTech.ReadMe.Example.Data.Entities.Precipitation", b =>
                {
                    b.HasOne("GodelTech.ReadMe.Example.Data.Entities.PrecipitationType", "PrecipitationType")
                        .WithMany()
                        .HasForeignKey("PrecipitationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
